suite: test ecs-cluster resource
templates:
  - ecs-cluster.yaml
tests:
  - it: should create a custom resource
    asserts:
      - isKind:
          of: ECSCluster
  - it: should have a default log agent image
    asserts:
    - equal:
        path: spec.syslogAgent.image.repository
        value: emccorp/rsyslog
    - equal:
        path: spec.syslogAgent.image.tag
        value: 0.18.0
    - equal:
        path: spec.syslogAgent.image.pullPolicy
        value: Always
  - it: should customize the log agent
    set:
      global.registry: my-registry
      syslogAgent.image.repository: my-log-agent
      syslogAgent.image.tag: latest
      syslogAgent.image.pullPolicy: IfNotPresent
    asserts:
      - equal:
          path: spec.syslogAgent.image.repository
          value: my-registry/my-log-agent
      - equal:
          path: spec.syslogAgent.image.tag
          value: latest
      - equal:
          path: spec.syslogAgent.image.pullPolicy
          value: IfNotPresent
  - it: should customize the storage storage
    set:
      global.registry: my-registry
      storageServer.image.repository: my-ss
      storageServer.image.tag: latest
      storageServer.image.pullPolicy: IfNotPresent
    asserts:
    - equal:
        path: spec.storageServer.image.repository
        value: my-registry/my-ss
    - equal:
        path: spec.storageServer.image.tag
        value: latest
    - equal:
        path: spec.storageServer.image.pullPolicy
        value: IfNotPresent
  # when we have global SC settin
  - it: should monitoring components not be deployed when advanced metrics is off
    set:
      enableAdvancedStatistics: false
    asserts:
    - equal:
        path: spec.telegraf.shouldBeDeployed
        value: false
    - equal:
        path: spec.fluxd.shouldBeDeployed
        value: false
    - equal:
        path: spec.throttler.shouldBeDeployed
        value: false
    - equal:
        path: spec.grafana.shouldBeDeployed
        value: false
  - it: should monitoring components be deployed when advanced metrics is on
    set:
      enableAdvancedStatistics: true
    asserts:
    - equal:
        path: spec.telegraf.shouldBeDeployed
        value: true
    - equal:
        path: spec.fluxd.shouldBeDeployed
        value: true
    - equal:
        path: spec.throttler.shouldBeDeployed
        value: true
    - equal:
        path: spec.grafana.shouldBeDeployed
        value: true
  - it: should customize SC for all persistance fields
    set:
      storageClassName: my-sc
    asserts:
    - equal:
        path: spec.storageServer.volumes.storageClassName
        value: my-sc
    - equal:
        path: spec.vnest.volumes.storageClassName
        value: my-sc
    - equal:
        path: spec.zookeeper.persistence.spec.storageClassName
        value: my-sc
  # when we have separate SC for a service
  - it: should customize SC for SS persistance field
    set:
      storageServer.persistence.storageClassName: my-sc
    asserts:
    - equal:
        path: spec.storageServer.volumes.storageClassName
        value: my-sc
  - it: should customize SC for VNest persistance field
    set:
      vnest.persistence.storageClassName: my-sc
    asserts:
    - equal:
        path: spec.vnest.volumes.storageClassName
        value: my-sc
  - it: should customize SC for Zookeeper persistance field
    set:
      zookeeper.persistence.storageClassName: my-sc
    asserts:
    - equal:
        path: spec.zookeeper.persistence.spec.storageClassName
        value: my-sc

  # when we have global SC and separate for a service
  - it: should customize separate SC for SS with global SC
    set:
      storageClassName: my-sc
      storageServer.persistence.storageClassName: my-ss-sc
    asserts:
    - equal:
        path: spec.storageServer.volumes.storageClassName
        value: my-ss-sc
    - equal:
        path: spec.vnest.volumes.storageClassName
        value: my-sc
    - equal:
        path: spec.zookeeper.persistence.spec.storageClassName
        value: my-sc
  - it: should customize separate SC for VNest with global SC
    set:
      storageClassName: my-sc
      vnest.persistence.storageClassName: my-vnest-sc
    asserts:
    - equal:
        path: spec.storageServer.volumes.storageClassName
        value: my-sc
    - equal:
        path: spec.vnest.volumes.storageClassName
        value: my-vnest-sc
    - equal:
        path: spec.zookeeper.persistence.spec.storageClassName
        value: my-sc
  - it: should customize separate SC for Zookeeper with global SC
    set:
      storageClassName: my-sc
      zookeeper.persistence.storageClassName: my-zookeeper-sc
    asserts:
    - equal:
        path: spec.storageServer.volumes.storageClassName
        value: my-sc
    - equal:
        path: spec.vnest.volumes.storageClassName
        value: my-sc
    - equal:
        path: spec.zookeeper.persistence.spec.storageClassName
        value: my-zookeeper-sc
  - it: should have a default deos-events image
    asserts:
    - equal:
        path: spec.deosEvents.image.repository
        value: emccorp/deos-events
    - equal:
        path: spec.deosEvents.image.tag
        value: 0.18.0
    - equal:
        path: spec.deosEvents.image.pullPolicy
        value: Always
    - equal:
        path: spec.deosEvents.pullFreq
        value: 30
  - it: should have deos-events pullFreq changes
    set:
      deosEvents.pullFreq: 1
    asserts:
    - equal:
        path: spec.deosEvents.pullFreq
        value: 1
  - it: should have default deos-events pullFreq
    set:
      deosEvents.pullFreq: null
    asserts:
    - equal:
        path: spec.deosEvents.pullFreq
        value: 30
