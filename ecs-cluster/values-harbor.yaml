---
# Default values for ecs-flex.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  # Name of a Kubernetes secret with Docker credentials for the private registry
  # registrySecret: ecs-flex-registry

  # The private docker registry and organization hosting containers for ECS Flex
  registry: harbor.lss.emc.com/ecs

# The default docker tag and pull policy for the ECS Cluster
tag: shippable
pullPolicy: Always

# The default number of replicas for each service
replicas: 1

# The default performance profile for the ECS cluster. Valid values are "Micro",
# "Default", and  "Small"
performanceProfile: Small

# Name of the storage class that all PVC should be provisioned from
# storageClassName:

# ServiceDiscovery describes the type of service discovery the ECS cluster will
# use. The discovery method will determine other cluster creation settings and
# restrictions.
serviceDiscovery: FabricProxySidecar

#
# ECS Service Configuration
#

atlas:
  # replicas: 3

  image:
    repository: atlas
    # tag: stable
    pullPolicy: Always

  persistence:
    # Size of each volume to be provisioned
    size: 16Gi

    # Name of the storage class that storage should be provisioned from
    # storageClassName:

zookeeper:
  # Override the number of nodes in the zookeeper cluster
  # replicas: 3

  image:
    repository: zookeeper
    # tag: stable
    # pullPolicy: IfNotPresent

  # Persistent storage options for zookeeper volume requests
  persistence:
    # Size of each volume to be provisioned
    size: 20Gi

    # Name of the storage class that storage should be provisioned from
    # storageClassName:

# The ECS storage server configuration specification
storageServer:

  # Override the number of storage server replicas to run with the the
  # stateful-set
  replicas: 4

  # Docker repository to be used for storage server instances
  image:
    repository: storageserver
    # tag: stable
    # pullPolicy: IfNotPresent

  # Persistent storage options for storage server volume requests
  persistence:
    # Indicates that the storage volumes provisioned are highly available and
    # not dependent on a single node to function
    protected: true

    # Number of volumes to be provisioned for each storage server instance
    # volumesCount: 1

    # Size of each volume to be provisioned
    size: 32Gi

    # Name of the storage class that storage should be provisioned from
    # storageClassName:

    erasureCoding:
      # Data blocks count for erasure coding can be tuned with the values below. "protected: false" required for this.
      # If values are not set, they will be calculated automatically (3 SS replicas: 3db/3cb, 4: 6db/3cb, 5+: 12/4).
      # dataBlocks: 12
      # codeBlocks: 4
      # Manually set values must conform the following formulas:
      # dataBlocks + codeBlocks <= (storageServer.replicas - 1) * codeBlocks
      # dataBlocks + codeBlocks <= 16
      # 60 % dataBlocks == 0

# The ECS chunk manager configuration specification
chunkManager:

  # Override the default ECS Cluster replicas to set the number of nodes in the
  # chunkManager cluster separately. This value should not be set when using
  # FabricProxy as the service discovery mechanism
  # replicas: 1

  # Docker repository to be used for chunk manager instances
  image:
    repository: chunk-manager
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS blob service configuration specification
blob:

  # Override the default ECS Cluster replicas to set the number of nodes in the
  # blob cluster separately. This value should not be set when using
  # FabricProxy as the service discovery mechanism
  # replicas: 1

  # Docker repository to be used for chunk manager instances
  image:
    repository: blob-service
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS storage server manager configuration specification
storageServerManager:

  # Number of storage server manager replicas to run with the the deployment
  # replicas: 3

  # Docker repository to be used for storage server instances
  image:
    repository: storageserver-manager
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS record manager configuration specification
recordManager:
  # Override the default ECS Cluster replicas to set the number of nodes in the
  # Record manager cluster separately. This value should not be set when using
  # FabricProxy as the service discovery mechanism
  # replicas: 1

  image:
    repository: record-manager
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS storage management configuration specification
# This container image is used in "Micro" performance profile instances
storageManagement:
  # Override the default ECS Cluster replicas to set the number of nodes in the
  # storage management cluster separately. This value should not be set when
  # using FabricProxy host network as the service discovery mechanism
  # replicas: 1

  image:
    repository: storagemanagement-service
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS Metering configuration specification
metering:
  # Override the default ECS Cluster replicas to set the number of nodes in the
  # Metering cluster separately. This value should not be set when using
  # FabricProxy as the service discovery mechanism
  # replicas: 1

  image:
    repository: metering
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS Metering configuration specification
event:
  # Override the default ECS Cluster replicas to set the number of nodes in the
  # Event cluster separately. This value should not be set when using
  # FabricProxy as the service discovery mechanism
  # replicas: 1

  image:
    repository: event-service
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS resource service configuration specification
resource:

  # Number of resource service replicas to run with the the deployment
  # replicas: 1

  # Docker repository to be used for resource service instances
  image:
    repository: resource-service
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS control configuration specification
# This container image is used in "Micro" performance profile instances
controlPlane:
  # Override the default ECS Cluster replicas to set the number of nodes in the
  # control plane management cluster separately. This value should not be set when
  # using FabricProxy host network as the service discovery mechanism
  # replicas: 1

  image:
    repository: control-service
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS diagnostic service configuration specification
diagnostic:

  # Number of resource service replicas to run with the the deployment
  # replicas: 1

  # Docker repository to be used for diagnostic service instances
  image:
    repository: diagnostic-service
    # tag: stable
    # pullPolicy: IfNotPresent
  service:
    # Specify the service port configuration for the diagnostic service
    ports:
    - name: diag
      port: 9100
      targetPort: 9100
    - name: diagweb
      port: 9101
      targetPort: 9101
    type: LoadBalancer
# The ECS object heads configuration specification
s3:

  # Number of resource service replicas to run with the the deployment
  # replicas: 3

  # Docker repository to be used for object heads instances
  image:
    repository: object-heads
    # tag: stable
    # pullPolicy: IfNotPresent

  service:
    type: LoadBalancer

# The ECS space reclaimer configuration specification
spaceReclaimer:

  # Number of resource service replicas to run with the the deployment
  # replicas: 3

  # Docker repository to be used for diagnostic service instances
  image:
    repository: space-reclaimer
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS geo receiver configuration specification
geoReceiver:

  # Number of geo receiver replicas to run with the the deployment
  # replicas: 3

  # Docker repository to be used for geo receiver instances
  image:
    repository: geo-receiver
    # tag: stable
    # pullPolicy: IfNotPresent
  service:

    ports:
      - name: geo
        port: 9094

# The ECS API control service configuration specification
stat:
  # Override the number of object control replicas to run with the the deployment
  # replicas: 1

  # Docker repository to be used for stat instances
  image:
    repository: statistics
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS API control service configuration specification
control:
  # Override the number of object control replicas to run with the the deployment
  # replicas: 1

  # Docker repository to be used for object control instances
  image:
    repository: object-control
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS telegraf configuration specification
telegraf:
  # Override the number of telegraf replicas to run with the the deployment
  # replicas: 1

  # Docker repository to be used for telegraf instances
  image:
    repository: telegraf
    # tag: latest
    # pullPolicy: IfNotPresent

# The ECS Grafana configuration specification
grafana:
  # Override the number of Grafana replicas to run with the the deployment
  # replicas: 1

  # Docker repository to be used for Grafana instances
  image:
    repository: grafana
    # tag: latest
    # pullPolicy: IfNotPresent
  service:
    type: LoadBalancer
    ports:
      - port: 3000
        name: grafana-port

# The ECS fluxd configuration specification
fluxd:
  # Override the number of FluxD replicas to run with the the deployment
  # replicas: 1

  # Docker repository to be used for FluxD instances
  image:
    repository: fluxd
    # tag: latest
    # pullPolicy: IfNotPresent

# The ECS throttler configuration specification
throttler:
  # Override the number of throttler replicas to run with the the deployment
  # replicas: 1

  # Docker repository to be used for throttler instances
  image:
    repository: throttler
    # tag: latest
    # pullPolicy: IfNotPresent

influxdb:
  # Override the number of influxdb replicas to run with the the deployment
  replicas: 1

  persistence:
    volumesCount: 1
    size: 32GB

  # Docker repository to be used for influxdb instances
  image:
    repository: influxdb
    # tag: latest
    # pullPolicy: IfNotPresent

# The managementGateway configuration specification
managementGateway:
  # Override the number of managementGateway replicas to run with the the deployment
  # replicas: 1

  # Docker repository to be used for managementGateway instances
  image:
    repository: management-gateway
    # tag: stable
    # pullPolicy: IfNotPresent
  service:

    # Specify the service port configuration for the managementGateway service
    ports:
      - name: api
        port: 4443
        targetPort: 4443

# Specify the service type for the managementGateway container. The default is a
# "ClusterIP"
#
# type: LoadBalancer

# Specify a specific load balancer IP address for the managementGateway service. By
# default, Kubernetes will allocate an address automatically from the
# load-balancer pool.
#
# loadBalancerIP: 10.0.0.1

# Specify a custom annotation for the managementGateway service. This is required for
# some public cloud load balancer providers when using a load balancer type
# service. The default value is an empty map.
#
# annotations:
#   some-annotation: some-value

# Enable or disable the cluster automatic provisioning. This step will provision
# the ECS resources into a single storage pool and virtual data center scoped to
# the Helm release name. If this is disabled, the cluster will need to be
# be provisioned via API before it can be used
provision:
  enabled: true
  image:
    repository: provision
    # tag: stable
    # pullPolicy: IfNotPresent

# The job will assign new created ss to the sp
expandsp:
  image:
    repository: provision

# The job can be spawned to modify CMF parameters (Object services configuration)
cmfswitch:
  image:
    repository: cmf-switch
    tag: green

#
# Sidecar configuration
#

# The log agent configuration for log collection of ECS services with a Syslog
# based receiver
syslogAgent:
  image:
    repository: rsyslog
    # tag: stable
    # pullPolicy: IfNotPresent

# The log agent configuration for log collection of ECS services with a Syslog
# based receiver
fluentbitAgent:
  image:
    repository: fluent-bit
    # tag: stable
    # pullPolicy: IfNotPresent

# The fabric proxy sidecar configuration for ECS Service Discovery and container
# preparation
fabricProxy:

  # The host network interface to use with the fabric proxy. The same interface
  # name must be available on all Kubernetes nodes within the ECS cluster.
  interface: eth0

  # Docker repository to be used for fabric proxy instances
  image:
    repository: fabric-proxy
    # tag: stable
    # pullPolicy: IfNotPresent

# deos health check configuration
deos_hc:
  # Docker repository to be used for running deos health check
  image:
    repository: deos-hc
    # tag: stable
    # pullPolicy: IfNotPresent
