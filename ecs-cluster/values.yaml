---
# Default values for ecs-flex.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This flag decides if an objecstore is actually started or paused
# Setting started = false will cause the manager to remove the objectstore
started: true

global:
  # Name of a Kubernetes secret with Docker credentials for the private registry
  # registrySecret: ecs-flex-registry

  # The private docker registry and organization hosting containers for ECS Flex
  registry: emccorp

  # Start a deos-hc cronjob to collect the healthchecks of the objectstores
  enableHealthcheck: true

  # Flex 1.0 ObjectStore monitoring stack
  monitoring:
    enabled: true

# The default docker tag and pull policy for the ECS Cluster
tag: 0.54.0
pullPolicy: IfNotPresent

# Override the default number of replicas which taken according to performance profile for each service
# replicas: 4

# The default performance profile for the ECS cluster. Valid values are "Micro",
# "Small", "Medium" and "Large"
performanceProfile: Small

# Name of the storage class that all PVC should be provisioned from
# storageClassName:

# ServiceDiscovery describes the type of service discovery the ECS cluster will
# use. The discovery method will determine other cluster creation settings and
# restrictions.
serviceDiscovery: FabricProxySidecar

# Create an application resource for management using Dell EMC common installer or other application-resource
# controllers
createApplicationResource: true

# progressDeadlineSeconds field for all Deployments installed in ECS cluster
deploymentDeadlineSeconds: 1200

# Configuration parameters for topology spread and fault domain selection
topology:
  # The node label key for topology spread and fault domains
  # faultDomainKey: rack
  # Fault domains to be excluded from resource scheduling
  # excludedFaultDomains:
  #   - zone1
  #   - zone3
  # The nodes to be targeted for resource scheduling
  # nodeSelector:
  #   key: row
  #   value: 3

# Different features of ECSCluster that can be enabled or disabled
features:

  # Enable Cross Region Replication
  enableCRR: false

  # Object type defines which service will be used: Blob service or Object service.
  # Values: blobSVC or objectSVC
  # NOTE: If CRR is enabled then Object service will be used forcibly
  objectType: blobSVC

#
# ECS Service Configuration
#

atlas:
  # replicas: 3

  image:
    repository: atlas
    tag: v1.1.1
    pullPolicy: IfNotPresent

  persistence:
    # Size of each volume to be provisioned
    size: 32Gi

    # Name of the storage class that storage should be provisioned from
    # storageClassName:

pravega:
  # labels:
  image:
    repository: pravega
#    tag: ...
  controller:
    replicas: 1
    service:
      type: ClusterIP
  segmentStore:
    replicas: 1
    service:
      type: ClusterIP


bookkeeper:
#  replicas: 3
  # labels:
  image:
    repository: bookkeeper
#    tag:
  storage:
    ledger:
      # storageClassName:
      volumeSize: 10Gi
    journal:
      # storageClassName:
      volumeSize: 10Gi
    index:
      # storageClassName:
      volumeSize: 10Gi

zookeeper:
  # Override the number of nodes in the zookeeper cluster
  # replicas: 3

  image:
    repository: zookeeper
    tag: 0.2.7
    # pullPolicy: IfNotPresent

  # Persistent storage options for zookeeper volume requests
  persistence:
    # Size of each volume to be provisioned
    size: 20Gi

    # Name of the storage class that storage should be provisioned from
    # storageClassName:

# The ECS storage server configuration specification
storageServer:

  # Override the number of storage server replicas to run with the the
  # stateful-set
  # replicas: 3

  # Docker repository to be used for storage server instances
  image:
    repository: storageserver
    # tag: stable
    # pullPolicy: IfNotPresent

  # Persistent storage options for storage server volume requests
  persistence:
    # Indicates that the storage volumes provisioned are highly available and
    # not dependent on a single node to function
    protected: true

    # Number of volumes to be provisioned for each storage server instance
    # volumesCount: 1

    # Size of each volume to be provisioned
    size: 200Gi

    # Name of the storage class that storage should be provisioned from
    # storageClassName:

    erasureCoding:
    # Data blocks count for erasure coding can be tuned with the values below. "protected: false" required for this.
    # If values are not set, they will be calculated automatically (3 SS replicas: 3db/3cb, 4: 6db/3cb, 5+: 12/4).
    # dataBlocks: 12
    # codeBlocks: 4
    # Manually set values must conform the following formulas:
    # dataBlocks + codeBlocks <= (storageServer.replicas - 1) * codeBlocks
    # dataBlocks + codeBlocks <= 16
    # 60 % dataBlocks == 0

# The ECS chunk manager configuration specification
chunkManager:

  # Override the default ECS Cluster replicas to set the number of nodes in the
  # chunkManager cluster separately. This value should not be set when using
  # FabricProxy as the service discovery mechanism
  # replicas: 1

  # Docker repository to be used for chunk manager instances
  image:
    repository: chunk-manager
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS blob service configuration specification
blob:

  # Override the default ECS Cluster replicas to set the number of nodes in the
  # blob cluster separately. This value should not be set when using
  # FabricProxy as the service discovery mechanism
  # replicas: 1

  # Docker repository to be used for chunk manager instances
  image:
    repository: blob-service
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS Object Service configuration specification
objectsvc:

  # Override the default ECS Cluster replicas to set the number of nodes in the
  # objectsvc cluster separately. This value should not be set when using
  # FabricProxy as the service discovery mechanism
  # replicas: 1

  # Docker repository to be used for objectsvc instances
  image:
    repository: object-service
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS Object Notification Service configuration specification
ons:

  # Override the default ECS Cluster replicas to set the number of nodes in the
  # ons cluster separately. This value should not be set when using
  # FabricProxy as the service discovery mechanism
  # replicas: 1

  # Docker repository to be used for ons instances
  image:
    repository: ons
    tag: latest
    # pullPolicy: IfNotPresent

# The ECS REP Service configuration specification
rep:

  # Override the default ECS Cluster replicas to set the number of nodes in the
  # rep cluster separately. This value should not be set when using
  # FabricProxy as the service discovery mechanism
  # replicas: 1

  # Docker repository to be used for rep instances
  image:
    repository: rep
    # tag: latest
    # pullPolicy: IfNotPresent

# The ECS storage server manager configuration specification
storageServerManager:

  # Number of storage server manager replicas to run with the the deployment
  # replicas: 3

  # Docker repository to be used for storage server instances
  image:
    repository: storageserver-manager
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS record manager configuration specification
recordManager:
  # Override the default ECS Cluster replicas to set the number of nodes in the
  # Record manager cluster separately. This value should not be set when using
  # FabricProxy as the service discovery mechanism
  # replicas: 1

  image:
    repository: record-manager
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS storage management configuration specification
# This container image is used in "Micro" performance profile instances
storageManagement:
  # Override the default ECS Cluster replicas to set the number of nodes in the
  # storage management cluster separately. This value should not be set when
  # using FabricProxy host network as the service discovery mechanism
  # replicas: 1

  image:
    repository: storagemanagement-service
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS Metering configuration specification
metering:
  # Override the default ECS Cluster replicas to set the number of nodes in the
  # Metering cluster separately. This value should not be set when using
  # FabricProxy as the service discovery mechanism
  # replicas: 1

  image:
    repository: metering
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS Metering configuration specification
event:
  # Override the default ECS Cluster replicas to set the number of nodes in the
  # Event cluster separately. This value should not be set when using
  # FabricProxy as the service discovery mechanism
  # replicas: 1

  image:
    repository: event-service
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS resource service configuration specification
resource:

  # Number of resource service replicas to run with the the deployment
  # replicas: 1

  # Docker repository to be used for resource service instances
  image:
    repository: resource-service
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS control configuration specification
# This container image is used in "Micro" performance profile instances
controlPlane:
  # Override the default ECS Cluster replicas to set the number of nodes in the
  # control plane management cluster separately. This value should not be set when
  # using FabricProxy host network as the service discovery mechanism
  # replicas: 1

  image:
    repository: control-service
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS diagnostic service configuration specification
diagnostic:

  # Number of resource service replicas to run with the the deployment
  # replicas: 1

  # Docker repository to be used for diagnostic service instances
  image:
    repository: diagnostic-service
    # tag: stable
    # pullPolicy: IfNotPresent
  service:
    # Type of Kubernetes service to create: ClusterIP, NodePort, or LoadBalancer
    type: ClusterIP

    # Specify the service port configuration for the diagnostic service
    ports:
      - name: diag
        port: 9100
        targetPort: 9100
      - name: diagweb
        port: 9101
        targetPort: 9101

# The ECS object heads configuration specification
s3:

  # Number of resource service replicas to run with the the deployment
  # replicas: 3

  # Docker repository to be used for object heads instances
  image:
    repository: object-heads
    # tag: stable
    # pullPolicy: IfNotPresent

  service:
    # Type of Kubernetes service to create: ClusterIP, NodePort, or LoadBalancer
    type: ClusterIP

    # Specify the service port configuration for the s3 service
    ports:
      - name: secure
        port: 443
        targetPort: 9021
      - name: insecure
        port: 80
        targetPort: 9020
        # nodePort:           # select specific node port for the connection

    # loadBalancerIP:     # select specific load balancer IP of the connection
    # externalHostnames:
    #   - objectscale-vsp.example.com
    # externalIPAddresses:
    #   - 203.0.113.10
    #   - 203.0.113.30
    # externalIPv6Addresses:
    #   - 2001:0db8:0000:0000:0000:0000:0000:0001

  tls:
    # Type of certificate signing: SelfSigned, KubernetesSigned, or ExternallySigned
    certificateType: SelfSigned

    certificate: {}
      # publicKey: < server side customer certificate>
      # privateKey: <private key for server side cert>
      # password: # cert password (optional)
      # authority: |-  # (optional)
      #   rootCA: xxxx
      #   intermediateCA:      # provide the intermediate CA here (optional)

    signingRequest:
      # commonName:        # override common Name for this CSR.  Defaults to cluster.local FQDN.
      # email: insertyouremail@example.com.local
      names:
        country: USA
        state: MA
        locality: Hopkinton
        organization: Dell EMC
        organizationalUnit: ObjectScale
      keyAlgorithm: RSA       # algorithm use to generate the key (ex. RSA, ECDSA)
      keySize: 2048           # size of the key in bits (ex. 2048, 4096, 8192)

# The ECS space reclaimer configuration specification
spaceReclaimer:

  # Number of resource service replicas to run with the the deployment
  # replicas: 3

  # Docker repository to be used for diagnostic service instances
  image:
    repository: space-reclaimer
    # tag: stable
    # pullPolicy: IfNotPresent

# The ECS geo service configuration specification
geoService:

  # Override the default ECS Cluster replicas to set the number of nodes in the
  # ons cluster separately. This value should not be set when using
  # FabricProxy as the service discovery mechanism
  # replicas: 1

  # Docker repository to be used for ons instances
  image:
    repository: geoservice
    tag: latest
    # pullPolicy: IfNotPresent

# The ECS geo receiver configuration specification
geoReceiver:

  # Number of geo receiver replicas to run with the the deployment
  # replicas: 3

  # Docker repository to be used for geo receiver instances
  image:
    repository: geo-receiver
    # tag: stable
    # pullPolicy: IfNotPresent
  service:

    ports:
      - name: geo
        port: 9094

# The ECS API control service configuration specification
control:
  # Override the number of object control replicas to run with the the deployment
  # replicas: 1

  # Docker repository to be used for object control instances
  image:
    repository: object-control
    # tag: stable
    # pullPolicy: IfNotPresent

# The managementGateway configuration specification
managementGateway:
  # Override the number of managementGateway replicas to run with the the deployment
  # replicas: 1

  # Docker repository to be used for managementGateway instances
  image:
    repository: management-gateway
    # tag: stable
    # pullPolicy: IfNotPresent

  service:
    # Type of Kubernetes service to create: ClusterIP, NodePort, or LoadBalancer
    type: ClusterIP

    # Specify the service port configuration for the managementGateway service
    ports:
      - name: api
        port: 4443
        targetPort: 4443
        # nodePort:           # select specific node port for the connection

    # loadBalancerIP:     # select specific load balancer IP of the connection
    # externalHostnames:
    #   - objectscale-vsp.example.com
    # externalIPAddresses:
    #   - 203.0.113.10
    #   - 203.0.113.30
    # externalIPv6Addresses:
    #   - 2001:0db8:0000:0000:0000:0000:0000:0001

  tls:

    # Type of certificate signing: SelfSigned, KubernetesSigned, or ExternallySigned
    certificateType: SelfSigned

    certificate: {}
      # publicKey: < server side customer certificate>
      # privateKey: <private key for server side cert>
      # password: # cert password (optional)
      # authority: |-  # (optional)
      #   rootCA: xxxx
      #   intermediateCA:      # provide the intermediate CA here (optional)

    signingRequest:
      # commonName:        # override common Name for this CSR.  Defaults to cluster.local FQDN.
      # email: insertyouremail@example.com.local
      names:
        country: USA
        state: MA
        locality: Hopkinton
        organization: Dell EMC
        organizationalUnit: ObjectScale
      keyAlgorithm: RSA       # algorithm use to generate the key (ex. RSA, ECDSA)
      keySize: 2048           # size of the key in bits (ex. 2048, 4096, 8192)

# Enable or disable the cluster automatic provisioning. This step will provision
# the ECS resources into a single storage pool and virtual data center scoped to
# the Helm release name. If this is disabled, the cluster will need to be
# be provisioned via API before it can be used
provision:
  enabled: true
  image:
    repository: provision
    # tag: stable
    # pullPolicy: IfNotPresent

# The job will assign new created ss to the sp
expandsp:
  image:
    repository: provision

cmfswitch:
  image:
    repository: cmf-switch
    # tag: stable
    # pullPolicy: IfNotPresent

#
# Sidecar configuration
#

# The log agent configuration for log collection of ECS services with a Syslog
# based receiver
syslogAgent:
  image:
    repository: rsyslog
    # tag: stable
    # pullPolicy: IfNotPresent

# The log agent configuration for log collection of ECS services with a Syslog
# based receiver
fluentbitAgent:
  image:
    repository: fluent-bit
    # tag: stable
    # pullPolicy: IfNotPresent

# The fabric proxy sidecar configuration for ECS Service Discovery and container
# preparation
fabricProxy:

  # The host network interface to use with the fabric proxy. The same interface
  # name must be available on all Kubernetes nodes within the ECS cluster.
  interface: eth0

  # Docker repository to be used for fabric proxy instances
  image:
    repository: fabric-proxy
    # tag: stable
    # pullPolicy: IfNotPresent

# deos health check configuration
deos_hc:
  # Docker repository to be used for running deos health check
  image:
    repository: deos-hc
    # tag: stable
    # pullPolicy: IfNotPresent

# deos_events to pull the events every pullFreq (default: 30 seconds) from the object store
# and convert them into the k8s events
deosEvents:
  pullFreq: 30
  image:
    repository: deos-events
    # tag: stable
    # pullPolicy: IfNotPresent
