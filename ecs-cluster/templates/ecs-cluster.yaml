---
{{- if .Values.started }}
apiVersion: "ecs.dellemc.com/v1beta1"
kind: "ECSCluster"
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace}}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    operator: objectscale-operator
    product: objectscale
    release: {{ .Release.Name }}
{{- if .Values.group }}
    group: {{ .Values.group }}
{{- end }}
spec:
{{- if .Values.global.registrySecret }}
  registrySecret: {{ .Values.global.registrySecret }}
{{- end }}
{{- if .Values.replicas }}
  replicas: {{ .Values.replicas }}
{{- end }}
  performanceProfile: {{ .Values.performanceProfile }}

  atlas:
    replicas: {{ coalesce .Values.atlas.replicas (index (dict "Large" 3) (title .Values.performanceProfile)) 1 }}
    labels:
      release: {{ .Release.Name }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.atlas.image.repository }}
      tag: {{ default .Values.tag .Values.atlas.image.tag }}
      pullPolicy: {{ default .Values.pullPolicy .Values.atlas.image.pullPolicy }}
    persistence:
      spec:
        storageClassName: {{ default .Values.storageClassName .Values.atlas.persistence.storageClassName }}
        resources:
          requests:
            storage: {{ required "atlas.persistence.size is required" .Values.atlas.persistence.size }}

  chunkManager:
{{- if .Values.chunkManager.replicas }}
    replicas: {{ .Values.chunkManager.replicas }}
{{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.chunkManager.image.repository }}
{{- if .Values.chunkManager.image.tag }}
      tag: {{ .Values.chunkManager.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.chunkManager.image.pullPolicy }}
      pullPolicy: {{ .Values.chunkManager.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  blob:
{{- if .Values.blob.replicas }}
    replicas: {{ .Values.blob.replicas }}
{{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.blob.image.repository }}
{{- if .Values.blob.image.tag }}
      tag: {{ .Values.blob.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.blob.image.pullPolicy }}
      pullPolicy: {{ .Values.blob.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  objectsvc:
{{- if .Values.objectsvc.replicas }}
    replicas: {{ .Values.objectsvc.replicas }}
{{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.objectsvc.image.repository }}
{{- if .Values.objectsvc.image.tag }}
      tag: {{ .Values.objectsvc.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.objectsvc.image.pullPolicy }}
      pullPolicy: {{ .Values.objectsvc.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  ons:
{{- if .Values.ons.replicas }}
    replicas: {{ .Values.ons.replicas }}
{{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.ons.image.repository }}
{{- if .Values.ons.image.tag }}
      tag: {{ .Values.ons.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.ons.image.pullPolicy }}
      pullPolicy: {{ .Values.ons.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  rep:
{{- if .Values.rep.replicas }}
    replicas: {{ .Values.rep.replicas }}
{{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.rep.image.repository }}
{{- if .Values.rep.image.tag }}
      tag: {{ .Values.rep.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.rep.image.pullPolicy }}
      pullPolicy: {{ .Values.rep.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  zookeeper:
{{- if .Values.zookeeper.replicas }}
    replicas: {{ .Values.zookeeper.replicas }}
{{- end }}
    labels:
      app: zookeeper
      component: zk
      release: {{ .Release.Name }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.zookeeper.image.repository }}
      tag: {{ .Values.zookeeper.image.tag }}
{{- if .Values.zookeeper.image.pullPolicy }}
      pullPolicy: {{ .Values.zookeeper.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}
    persistence:
{{- if .Values.zookeeper.persistence.storageClassName }}
      spec:
        storageClassName: {{ .Values.zookeeper.persistence.storageClassName }}
{{- else if .Values.storageClassName }}
      spec:
        storageClassName: {{ .Values.storageClassName }}
{{- end }}
      resources:
        requests:
          storage: {{ .Values.zookeeper.persistence.size }}

  bookkeeper:
    {{- if .Values.bookkeeper.replicas }}
    replicas: {{ .Values.bookkeeper.replicas }}
    {{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.bookkeeper.image.repository }}
      tag: {{ .Values.bookkeeper.image.tag }}
      {{- if .Values.bookkeeper.image.pullPolicy }}
      pullPolicy: {{ .Values.bookkeeper.image.pullPolicy }}
      {{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
    {{- end }}
    storage:
      ledgerVolumeClaimTemplate:
        accessModes: [ "ReadWriteOnce" ]
        {{- if .Values.bookkeeper.storage.ledger.storageClassName }}
        storageClassName: {{ .Values.bookkeeper.storage.ledger.storageClassName }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.bookkeeper.storage.ledger.volumeSize }}
      journalVolumeClaimTemplate:
        accessModes: [ "ReadWriteOnce" ]
        {{- if .Values.bookkeeper.storage.journal.storageClassName }}
        storageClassName: {{ .Values.bookkeeper.storage.journal.storageClassName }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.bookkeeper.storage.journal.volumeSize }}
      indexVolumeClaimTemplate:
        accessModes: [ "ReadWriteOnce" ]
        {{- if .Values.bookkeeper.storage.index.storageClassName }}
        storageClassName: {{ .Values.bookkeeper.storage.index.storageClassName }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.bookkeeper.storage.index.volumeSize }}

  pravega:
    {{- if .Values.pravega.controller.service.type }}
    controllerExtServiceType: {{ .Values.pravega.controller.service.type }}
    {{- end }}
    {{- if .Values.pravega.segmentStore.service.type }}
    segmentStoreExtServiceType: {{ .Values.pravega.segmentStore.service.type }}
    {{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.pravega.image.repository }}
      {{- if .Values.pravega.image.pullPolicy }}
      pullPolicy: {{ .Values.pravega.image.pullPolicy }}
      {{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
    {{- end }}
    controllerReplicas: {{ .Values.pravega.controller.replicas }}
    segmentStoreReplicas: {{ .Values.pravega.segmentStore.replicas }}

  storageServer:
{{- if .Values.storageServer.replicas }}
    replicas: {{ .Values.storageServer.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.storageServer.image.repository }}
{{- if .Values.storageServer.image.tag }}
      tag: {{ .Values.storageServer.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.storageServer.image.pullPolicy }}
      pullPolicy: {{ .Values.storageServer.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

    volumes:
{{- if .Values.storageServer.persistence.protected }}
      protected: {{ .Values.storageServer.persistence.protected }}
{{- end }}
{{- if .Values.storageServer.persistence.erasureCoding }}
      erasureCoding:
{{- if .Values.storageServer.persistence.erasureCoding.dataBlocks }}
        dataBlocks: {{ .Values.storageServer.persistence.erasureCoding.dataBlocks }}
{{- end }}
{{- if .Values.storageServer.persistence.erasureCoding.codeBlocks }}
        codeBlocks: {{ .Values.storageServer.persistence.erasureCoding.codeBlocks }}
{{- end }}
{{- end }}
      volumesCount: {{ .Values.storageServer.persistence.volumesCount }}
{{- if .Values.storageServer.persistence.storageClassName }}
      storageClassName: {{ .Values.storageServer.persistence.storageClassName }}
{{- else if .Values.storageClassName }}
      storageClassName: {{ .Values.storageClassName }}
{{- end }}
      resources:
        requests:
          storage: {{ .Values.storageServer.persistence.size }}

  storageServerManager:
{{- if .Values.storageServerManager.replicas }}
    replicas: {{ .Values.storageServerManager.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.storageServerManager.image.repository }}
{{- if .Values.storageServerManager.image.tag }}
      tag: {{ .Values.storageServerManager.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.storageServerManager.image.pullPolicy }}
      pullPolicy: {{ .Values.storageServerManager.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  recordManager:
{{- if .Values.recordManager.replicas }}
    replicas: {{ .Values.recordManager.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.recordManager.image.repository }}
{{- if .Values.recordManager.image.tag }}
      tag: {{ .Values.recordManager.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.recordManager.image.pullPolicy }}
      pullPolicy: {{ .Values.recordManager.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  storageManagement:
{{- if .Values.storageManagement.replicas }}
    replicas: {{ .Values.storageManagement.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.storageManagement.image.repository }}
{{- if .Values.storageManagement.image.tag }}
      tag: {{ .Values.storageManagement.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.storageManagement.image.pullPolicy }}
      pullPolicy: {{ .Values.storageManagement.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  metering:
{{- if .Values.metering.replicas }}
    replicas: {{ .Values.metering.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.metering.image.repository }}
{{- if .Values.metering.image.tag }}
      tag: {{ .Values.metering.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.metering.image.pullPolicy }}
      pullPolicy: {{ .Values.metering.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  event:
{{- if .Values.event.replicas }}
    replicas: {{ .Values.event.replicas }}
  {{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.event.image.repository }}
{{- if .Values.event.image.tag }}
      tag: {{ .Values.event.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
  {{- end }}
{{- if .Values.event.image.pullPolicy }}
      pullPolicy: {{ .Values.event.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
  {{- end }}
    pod:
      env:
        - name: "EVENTSVC_APP_NAME"
          value: "{{ .Release.Name }}"
        - name: "NAMESPACE"
          value: "{{ .Release.Namespace }}"

  deosEvents:
{{- if .Values.deosEvents.pullFreq }}
    pullFreq: {{ .Values.deosEvents.pullFreq }}
{{- else }}
    pullFreq: 30
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.deosEvents.image.repository }}
{{- if .Values.deosEvents.image.tag }}
      tag: {{ .Values.deosEvents.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.deosEvents.image.pullPolicy }}
      pullPolicy: {{ .Values.deosEvents.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  resource:
{{- if .Values.resource.replicas }}
    replicas: {{ .Values.resource.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.resource.image.repository }}
{{- if .Values.resource.image.tag }}
      tag: {{ .Values.resource.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.resource.image.pullPolicy }}
      pullPolicy: {{ .Values.resource.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}


  controlPlane:
{{- if .Values.controlPlane.replicas }}
    replicas: {{ .Values.controlPlane.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.controlPlane.image.repository }}
{{- if .Values.controlPlane.image.tag }}
      tag: {{ .Values.controlPlane.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.controlPlane.image.pullPolicy }}
      pullPolicy: {{ .Values.controlPlane.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  diagnostic:
{{- if .Values.diagnostic.replicas }}
    replicas: {{ .Values.diagnostic.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.diagnostic.image.repository }}
{{- if .Values.diagnostic.image.tag }}
      tag: {{ .Values.diagnostic.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.diagnostic.image.pullPolicy }}
      pullPolicy: {{ .Values.diagnostic.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}
{{- if .Values.diagnostic.service }}
    service:
      {{ toYaml .Values.diagnostic.service | nindent 6 | trim }}
{{- end }}

  geoService:
    {{- if .Values.geoService.replicas }}
    replicas: {{ .Values.geoService.replicas }}
    {{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.geoService.image.repository }}
      {{- if .Values.geoService.image.tag }}
      tag: {{ .Values.geoService.image.tag }}
      {{- else }}
      tag: {{ .Values.tag }}
      {{- end }}
      {{- if .Values.geoService.image.pullPolicy }}
      pullPolicy: {{ .Values.geoService.image.pullPolicy }}
      {{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
  {{- end }}

  geoReceiver:
{{- if .Values.geoReceiver.replicas }}
    replicas: {{ .Values.geoReceiver.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.geoReceiver.image.repository }}
{{- if .Values.geoReceiver.image.tag }}
      tag: {{ .Values.geoReceiver.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.geoReceiver.image.pullPolicy }}
      pullPolicy: {{ .Values.geoReceiver.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}
{{- if .Values.geoReceiver.service }}
    service:
      {{ toYaml .Values.geoReceiver.service | nindent 6 | trim }}
{{- end }}

  spaceReclaimer:
{{- if .Values.spaceReclaimer.replicas }}
    replicas: {{ .Values.spaceReclaimer.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.spaceReclaimer.image.repository }}
{{- if .Values.spaceReclaimer.image.tag }}
      tag: {{ .Values.spaceReclaimer.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.spaceReclaimer.image.pullPolicy }}
      pullPolicy: {{ .Values.spaceReclaimer.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  control:
{{- if .Values.control.replicas }}
    replicas: {{ .Values.control.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.control.image.repository }}
{{- if .Values.control.image.tag }}
      tag: {{ .Values.control.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.control.image.pullPolicy }}
      pullPolicy: {{ .Values.control.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  s3:
    replicas: {{ default .Values.s3.replicas }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.s3.image.repository }}
      tag: {{ default .Values.tag .Values.s3.image.tag }}
      pullPolicy: {{ default .Values.s3.image.pullPolicy .Values.pullPolicy }}

{{- if .Values.s3.service }}
    service:
      {{ toYaml .Values.s3.service | nindent 6 | trim }}
{{- end }}
{{- if .Values.s3.tls }}
    tls:
      {{ toYaml .Values.s3.tls | nindent 6 | trim }}
{{- end }}


  managementGateway:
{{- if .Values.managementGateway.replicas }}
    replicas: {{ .Values.managementGateway.replicas }}
{{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.managementGateway.image.repository }}
{{- if .Values.managementGateway.image.tag }}
      tag: {{ .Values.managementGateway.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.managementGateway.image.pullPolicy }}
      pullPolicy: {{ .Values.managementGateway.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}
{{- if .Values.managementGateway.service }}
    service:
      {{ toYaml .Values.managementGateway.service | nindent 6 | trim }}
{{- end }}
{{- if .Values.managementGateway.tls }}
    tls:
      {{ toYaml .Values.managementGateway.tls | nindent 6 | trim }}
{{- end }}

  provision:
    enabled: {{.Values.provision.enabled }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.provision.image.repository }}
{{- if .Values.provision.image.tag }}
      tag: {{ .Values.provision.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.provision.image.pullPolicy }}
      pullPolicy: {{ .Values.provision.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  expandsp:
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.expandsp.image.repository }}
{{- if .Values.expandsp.image.tag }}
      tag: {{ .Values.expandsp.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.expandsp.image.pullPolicy }}
      pullPolicy: {{ .Values.expandsp.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  cmfswitch:
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.cmfswitch.image.repository }}
      {{- if .Values.cmfswitch.image.tag }}
      tag: {{ .Values.cmfswitch.image.tag }}
      {{- else }}
      tag: {{ .Values.tag }}
      {{- end }}
      {{- if .Values.cmfswitch.image.pullPolicy }}
      pullPolicy: {{ .Values.cmfswitch.image.pullPolicy }}
      {{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
  {{- end }}

  syslogAgent:
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.syslogAgent.image.repository }}
{{- if .Values.syslogAgent.image.tag }}
      tag: {{ .Values.syslogAgent.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.syslogAgent.image.pullPolicy }}
      pullPolicy: {{ .Values.syslogAgent.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  fluentbitAgent:
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.fluentbitAgent.image.repository }}
{{- if .Values.fluentbitAgent.image.tag }}
      tag: {{ .Values.fluentbitAgent.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.fluentbitAgent.image.pullPolicy }}
      pullPolicy: {{ .Values.fluentbitAgent.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  fabricProxy:
    interface: {{ .Values.fabricProxy.interface }}
{{- if .Values.fabricProxy.replicas }}
    replicas: {{ .Values.fabricProxy.replicas }}
{{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.fabricProxy.image.repository }}
{{- if .Values.fabricProxy.image.tag }}
      tag: {{ .Values.fabricProxy.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.fabricProxy.image.pullPolicy }}
      pullPolicy: {{ .Values.fabricProxy.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  enableCRR: {{ .Values.features.enableCRR }}

  objectType: {{ .Values.features.objectType }}

  deploymentDeadlineSeconds: {{ .Values.deploymentDeadlineSeconds }}

{{- end }}
