{{- if (eq .Values.global.platform "VMware-PKS") }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: objectscale-vsphere-plugin
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: objectscale-manager
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: objectscale-vsphere-plugin
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name}}
    operator: objectscale-operator
    product: objectscale
data:
  upstream.conf: |
    upstream graphql {
      server {{ .Values.graphql.serviceName }}:{{ .Values.graphql.port }};
    }
    upstream decks {
      server {{ .Values.decks.supportStore.service.name }}:{{ .Values.decks.supportStore.service.port }};
    }
  nginx.conf: |
    events {
      worker_connections  4096;  ## Default: 1024
    }
    http {
        include /etc/nginx/mime.types;
        include /conf/upstream.conf;
        server {
            listen       4443;
            server_name  localhost;
            ssl on;
            ssl_protocols        TLSv1.2;
            ssl_ciphers          AES:!ADH;
            ssl_certificate /etc/nginx/ssl/tls.crt;
            ssl_certificate_key /etc/nginx/ssl/tls.key;
            location /graphql {
                proxy_pass http://graphql;
            }
            location /data {
                proxy_pass https://decks;
            }
            location /platform {
                default_type application/json;
                return 200 '{"value":"VMware-PKS"}';
            }
            location / {
                root   /usr/share/nginx/html;
                index  index.html index.htm;
            }
        }
    }
{{- end }}
