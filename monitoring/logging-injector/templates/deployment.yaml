---
#
# Copyright Â© [2020] Dell Inc. or its subsidiaries.
# All Rights Reserved.
#
# This software contains the intellectual property of Dell Inc.
# or is licensed to Dell Inc. from third parties. Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of Dell Inc. or its subsidiaries.
#
#

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "logging-injector.fullname" . }}
  labels:
{{ include "logging-injector.labels" . | indent 4}}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "logging-injector.fullname" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "logging-injector.fullname" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
      - name: {{ .Chart.Name }}-init
        #image: "{{ include "common-lib.monitoring_registry" . }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Values.global.monitoring_tag }}"
        image: "asdrepo.isus.emc.com:8099/logging-injector:3.7.0.0-979.452ee4af"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        volumeMounts:
          - mountPath: /etc/injector/ca-bundle
            name: ca-bundle
          - mountPath: /etc/injector/server-cert
            name: server-cert
        command: ["/usr/bin/gen_cert"]
        args: ["--ca-path", "/etc/injector/ca-bundle/ca.pem",
               "--ca-key", "/etc/injector/ca-bundle/ca.key",
               "--cert-dir", "/etc/injector/server-cert",
               "--service-name", {{ include "logging-injector.fullname" .  | quote}},
               "--service-namespace", {{ .Release.Namespace }},
               "--server-cert-name", "cert.pem",
               "--server-key-name", "key.pem"]
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ include "common-lib.monitoring_registry" . }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Values.global.monitoring_tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command: ["/usr/bin/injector"]
        args: ["--port", "8443",
               "--cert-path", "/etc/webhook/certs/cert.pem", "--key-path", "/etc/webhook/certs/key.pem",
               "--config", "/etc/webhook/config/sidecarconfig.yaml"]
        ports:
          - name: api
            containerPort: 8443
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: server-cert
          mountPath: /etc/webhook/certs
        - name: sidecar-config
          mountPath: /etc/webhook/config
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      volumes:
        - name: ca-bundle
          secret:
            secretName: {{ include "logging-injector.fullname" . }}-ca-bundle
        - name: server-cert
          emptyDir: {}
        - name: sidecar-config
          configMap:
            name: {{ include "logging-injector.fullname" . }}-config
